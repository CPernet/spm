function spmjobs = spm_cfg
% SPM Configuration file
% automatically generated by the MATLABBATCH utility function GENCODE
%_______________________________________________________________________
% Copyright (C) 2008 Wellcome Trust Centre for Neuroimaging

% $Id: spm_cfg.m 1185 2008-03-04 16:31:21Z volkmar $

%_______________________________________________________________________
% temporal Temporal
% ---------------------------------------------------------------------
temporal         = cfg_repeat;
temporal.tag     = 'temporal';
temporal.name    = 'Temporal';
temporal.help    = {'Temporal pre-processing functions.'};
temporal.values  = { spm_cfg_st};
temporal.forcestruct = true;
temporal.num     = [0 Inf];
% ---------------------------------------------------------------------
% spatial Spatial
% ---------------------------------------------------------------------
spatial         = cfg_repeat;
spatial.tag     = 'spatial';
spatial.name    = 'Spatial';
spatial.help    = {'Various spatial and other pre-processing functions.'};
spatial.values  = { spm_cfg_realign spm_cfg_realignunwarp spm_cfg_coreg spm_cfg_preproc spm_cfg_normalise spm_cfg_smooth};
spatial.forcestruct = true;
spatial.num     = [0 Inf];
% ---------------------------------------------------------------------
% stats Stats
% ---------------------------------------------------------------------
stats         = cfg_repeat;
stats.tag     = 'stats';
stats.name    = 'Stats';
stats.help    = {'Various analysis utilities.'};
stats.values  = { spm_cfg_fmri_spec spm_cfg_fmri_design spm_cfg_fmri_data spm_cfg_factorial_design spm_cfg_fmri_est spm_cfg_con spm_cfg_results};
stats.forcestruct = true;
stats.num     = [0 Inf];
% ---------------------------------------------------------------------
% util Util
% ---------------------------------------------------------------------
util         = cfg_repeat;
util.tag     = 'util';
util.name    = 'Util';
util.help    = {'Various useful tools.'};
util.values  = { spm_cfg_disp spm_cfg_checkreg spm_cfg_imcalc spm_cfg_reorient spm_cfg_dicom spm_cfg_minc spm_cfg_ecat spm_cfg_spm_surf spm_cfg_runbatch spm_cfg_cdir spm_cfg_md spm_cfg_movefile spm_cfg_deletefiles spm_cfg_defs spm_cfg_ui spm_cfg_meeg spm_cfg_cat};
util.forcestruct = true;
util.num     = [0 Inf];
% ---------------------------------------------------------------------
% tools Tools
% ---------------------------------------------------------------------
tools         = cfg_repeat;
tools.tag     = 'tools';
tools.name    = 'Tools';
tools.help    = {'Other tools', ...
                 ['Toolbox configuration files should be placed in the ' ...
                  'toolbox directory, with their own *_cfg_*.m files. ' ...
                  'If you write a toolbox, then you can include it in ' ...
                  'this directory - but remember to try to keep the ' ...
                  'function names unique (to reduce  clashes with other ' ...
                  'toolboxes).'], ...
                 ['See spm_cfg.m or MATLABBATCH documentation ' ...
                  'for information about the form of SPM''s configuration ' ...
                  'files.']};
tools.forcestruct = true;
tools.num     = [0 Inf];
%-Toolbox autodetection
%-Get the list of toolbox directories
tbxdir = fullfile(spm('Dir'),'toolbox');
d  = dir(tbxdir); d = {d([d.isdir]).name};
dd = regexp(d,'^\.');
%(Beware, regexp returns an array if input cell array is of dim 0 or 1)
if ~iscell(dd), dd = {dd}; end
d  = {'' d{cellfun('isempty',dd)}};
ft = {}; dt = {};
ftc = {}; dtc = {};
%-Look for '*_cfg_*.m' or '*_config_*.m' files in these directories
for i=1:length(d)
    d2 = fullfile(tbxdir,d{i});
    di = dir(d2); di = {di(~[di.isdir]).name};
    f2 = regexp(di,'.*_cfg_.*\.m$');
    if ~iscell(f2), f2 = {f2}; end
    fi = {di{~cellfun('isempty',f2)}};
    if ~isempty(fi)
        ft = {ft{:} fi{:}};
        dt(end+1:end+length(fi)) = deal({d2});
    else
        % try *_config_*.m files, if toolbox does not have '*_cfg_*.m' files
        f2 = regexp(di,'.*_config_.*\.m$');
        if ~iscell(f2), f2 = {f2}; end
        fi = {di{~cellfun('isempty',f2)}};
        ftc = {ftc{:} fi{:}};
        dtc(end+1:end+length(fi)) = deal({d2});
    end;        
end
if ~isempty(ft)||~isempty(ftc)
    % The toolbox developer MUST add path to his/her toolbox in his/her 'prog'
    % function, with a command line like:
    % >> addpath(fullfile(spm('Dir'),'toolbox','mytoolbox'),'-end');
    cwd = pwd;
    j = 1;
    for i=1:length(ft)
        try
            cd(dt{i});
            tools.values{j} = feval(strtok(ft{i},'.'));
            j = j + 1;
        catch
            disp(['Loading of toolbox ' fullfile(dt{i},ft{i}) ' failed.']);
        end
    end
    for i=1:length(ftc)
        try
            cd(dtc{i});
            % use cfg_struct2cfg to convert from SPM5 to matlabbatch
            % configuration tree
            tools.values{j} = cfg_struct2cfg(feval(strtok(ftc{i},'.')));
            j = j + 1;
        catch
            disp(['Loading of toolbox ' fullfile(dtc{i},ftc{i}) ' failed.']);
        end
    end
    cd(cwd);
end
%_______________________________________________________________________
% spmjobs SPM
%_______________________________________________________________________
spmjobs         = cfg_repeat;
spmjobs.tag     = 'spmjobs';
spmjobs.name    = 'SPM';
spmjobs.help    = {
                '%* Top Left Panel'
                '/*\subsection*{Top Left Panel}*/'
                'The current list of jobs, which is represented as a tree-structure. Double-clicking can expand/contract items of the tree (marked with +/-) for visualisation. Items marked with X still require some values to be set before the job can be run, although an incompletely specified job can still be saved and loaded.'
                ''
                '%* Top Right Panel'
                '/*\subsection*{Top Right Panel}*/'
                'These are the options avaliable for the currently highlighted item. Changing the list of jobs is done by clicking on an option in the menu. Items can created, replicated or removed, allowing the processing stream to be modified. Values are also modified or entered via this panel. This is either by specifying values as text, selecting a menu option, or by file selection.'
                ''
                '%* Centre Right Panel'
                '/*\subsection*{Centre Right Panel}*/'
                'This panel shows the current value of the highlighted item (where relevant).'
                ''
                '%* Save, Load & Run'
                '/*\subsection*{Save, Load \& Run}*/'
                'Jobs can be saved and loaded at a later time, either as XML or Matlab .mat files.  The format depends on the extension you give the filename. XML files can be loaded into Matlab via "loadxml", modified, and saved again by "savexml", whereas "load" and "save" can be used for Matlab .mat files. Incomplete jobs can be loaded or saved, but the specification needs to be complete for a job to be run.'
                ''
                '%* Bottom Panel'
                '/*\subsection*{Bottom Panel}*/'
                'This panel provides information about the meaning of the current item. Branches and editable items may hold 2 kinds of help information: "General help", which is read-only, and "Job specific help", which you may edit by selecting "Edit help" from the context menu. There you can put in annotations that describe your batch workflow. They will be saved & loaded with your batch and thus allow to document the intentions of the batch.'
                '/*\begin{figure} \begin{center} \includegraphics[width=70mm]{images/ui1} \includegraphics[width=70mm]{images/ui2} \includegraphics[width=70mm]{images/ui3} \includegraphics[width=70mm]{images/ui4}\end{center} \caption{The SPM5 user interface. \emph{Top left:} The usual user-interface.  \emph{Top right:} The Defaults user-interface. \emph{Bottom left:} The file selector (click the (?) button for more information about filtering filenames, or selecting individual volumes within a 4D file). \emph{Bottom right:} more online help can be obtained via the main help button.} \end{figure} */'
}';
spmjobs.values  = { temporal spatial stats util tools};
spmjobs.forcestruct = true;
spmjobs.num     = [0 Inf];
