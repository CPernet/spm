function spmjobs = spm_def
% SPM matlabbatch defaults
% The data structure defined below has been generated by running
% cfg_util('harvestdef','spm') on a default SPM configuration tree.
% It describes all possible tags than can occur in a valid job
% structure and their default value. Cell indices used in cfg_repeat
% entries have been omitted for better readability. If similar options
% are shared between different parts of the configuration tree, they will
% be duplicated in the data structure. 
% The code for this file has been generated by gencode. Some
% modifications have been made:
% * Tools defaults have been moved to separate files. They will be
%   included using a mechanism similar to including toolbox configuration 
%   files.
% * References to spm_defaults have been added where values are defined
%   in the global defaults structure.
%_______________________________________________________________________
% Copyright (C) 2008 Wellcome Trust Centre for Neuroimaging

% $Id: spm_def.m 1408 2008-04-15 10:15:34Z volkmar $

spm_defaults;
global defaults;

spmjobs.temporal.st.scans = {'<UNDEFINED>'};
spmjobs.temporal.st.nslices = '<UNDEFINED>';
spmjobs.temporal.st.tr = '<UNDEFINED>';
spmjobs.temporal.st.ta = '<UNDEFINED>';
spmjobs.temporal.st.so = '<UNDEFINED>';
spmjobs.temporal.st.refslice = '<UNDEFINED>';
spmjobs.temporal.st.prefix = 'a';
spmjobs.spatial.realign.estimate.data = {'<UNDEFINED>'};
spmjobs.spatial.realign.estimate.eoptions.quality = defaults.realign.estimate.quality;
spmjobs.spatial.realign.estimate.eoptions.sep = defaults.realign.estimate.sep;
spmjobs.spatial.realign.estimate.eoptions.fwhm = defaults.realign.estimate.fwhm;
spmjobs.spatial.realign.estimate.eoptions.rtm = defaults.realign.estimate.rtm;
spmjobs.spatial.realign.estimate.eoptions.interp = defaults.realign.estimate.interp;
spmjobs.spatial.realign.estimate.eoptions.wrap = defaults.realign.estimate.wrap;
spmjobs.spatial.realign.estimate.eoptions.weight = defaults.realign.estimate.weight;
spmjobs.spatial.realign.write.data = '<UNDEFINED>';
spmjobs.spatial.realign.write.roptions.which = double([2 1]);
spmjobs.spatial.realign.write.roptions.interp = defaults.realign.write.interp;
spmjobs.spatial.realign.write.roptions.wrap = defaults.realign.write.wrap;
spmjobs.spatial.realign.write.roptions.mask = defaults.realign.write.mask;
spmjobs.spatial.realign.write.roptions.prefix = 'r';
spmjobs.spatial.realign.estwrite.data = {'<UNDEFINED>'};
spmjobs.spatial.realign.estwrite.eoptions.quality = double(0.900000000000000022);
spmjobs.spatial.realign.estwrite.eoptions.quality = defaults.realign.estimate.quality;
spmjobs.spatial.realign.estwrite.eoptions.sep = defaults.realign.estimate.sep;
spmjobs.spatial.realign.estwrite.eoptions.fwhm = defaults.realign.estimate.fwhm;
spmjobs.spatial.realign.estwrite.eoptions.rtm = defaults.realign.estimate.rtm;
spmjobs.spatial.realign.estwrite.eoptions.interp = defaults.realign.estimate.interp;
spmjobs.spatial.realign.estwrite.eoptions.wrap = defaults.realign.estimate.wrap;
spmjobs.spatial.realign.estwrite.eoptions.weight = defaults.realign.estimate.weight;
spmjobs.spatial.realign.estwrite.roptions.which = double([2 1]);
spmjobs.spatial.realign.estwrite.roptions.interp = defaults.realign.write.interp;
spmjobs.spatial.realign.estwrite.roptions.wrap = defaults.realign.write.wrap;
spmjobs.spatial.realign.estwrite.roptions.mask = defaults.realign.write.mask;
spmjobs.spatial.realign.estwrite.roptions.prefix = 'r';
spmjobs.spatial.realignunwarp.data.scans = '<UNDEFINED>';
spmjobs.spatial.realignunwarp.data.pmscan = {};
spmjobs.spatial.realignunwarp.eoptions.quality = defaults.realign.estimate.quality;
spmjobs.spatial.realignunwarp.eoptions.sep = defaults.realign.estimate.sep;
spmjobs.spatial.realignunwarp.eoptions.fwhm = defaults.realign.estimate.fwhm;
spmjobs.spatial.realignunwarp.eoptions.rtm = double(0);
spmjobs.spatial.realignunwarp.eoptions.einterp = defaults.realign.estimate.interp;
spmjobs.spatial.realignunwarp.eoptions.ewrap = defaults.realign.estimate.wrap;
spmjobs.spatial.realignunwarp.eoptions.weight = defaults.realign.estimate.weight;
spmjobs.spatial.realignunwarp.uweoptions.basfcn = defaults.unwarp.estimate.basfcn;
spmjobs.spatial.realignunwarp.uweoptions.regorder = defaults.unwarp.estimate.regorder;
spmjobs.spatial.realignunwarp.uweoptions.lambda = defaults.unwarp.estimate.regwgt;
spmjobs.spatial.realignunwarp.uweoptions.jm = defaults.unwarp.estimate.jm;
spmjobs.spatial.realignunwarp.uweoptions.fot = double([4 5]);
spmjobs.spatial.realignunwarp.uweoptions.sot = '<UNDEFINED>';
spmjobs.spatial.realignunwarp.uweoptions.uwfwhm = defaults.unwarp.estimate.fwhm;
spmjobs.spatial.realignunwarp.uweoptions.rem = defaults.unwarp.estimate.rem;
spmjobs.spatial.realignunwarp.uweoptions.noi = defaults.unwarp.estimate.noi;
spmjobs.spatial.realignunwarp.uweoptions.expround = defaults.unwarp.estimate.expround;
spmjobs.spatial.realignunwarp.uwroptions.uwwhich = double([2 1]);
spmjobs.spatial.realignunwarp.uwroptions.rinterp = defaults.realign.write.interp;
spmjobs.spatial.realignunwarp.uwroptions.wrap = defaults.realign.write.wrap;
spmjobs.spatial.realignunwarp.uwroptions.mask = defaults.realign.write.mask;
spmjobs.spatial.realignunwarp.uwroptions.prefix = 'u';
spmjobs.spatial.coreg.estimate.ref = '<UNDEFINED>';
spmjobs.spatial.coreg.estimate.source = '<UNDEFINED>';
spmjobs.spatial.coreg.estimate.other = {''};
spmjobs.spatial.coreg.estimate.eoptions.cost_fun = defaults.coreg.estimate.cost_fun;
spmjobs.spatial.coreg.estimate.eoptions.sep = defaults.coreg.estimate.sep;
spmjobs.spatial.coreg.estimate.eoptions.tol = defaults.coreg.estimate.tol;
spmjobs.spatial.coreg.estimate.eoptions.fwhm = defaults.coreg.estimate.fwhm;
spmjobs.spatial.coreg.write.ref = '<UNDEFINED>';
spmjobs.spatial.coreg.write.source = '<UNDEFINED>';
spmjobs.spatial.coreg.write.roptions.interp = defaults.coreg.write.interp;
spmjobs.spatial.coreg.write.roptions.wrap = defaults.coreg.write.wrap;
spmjobs.spatial.coreg.write.roptions.mask = defaults.coreg.write.mask;
spmjobs.spatial.coreg.write.roptions.prefix = 'r';
spmjobs.spatial.coreg.estwrite.ref = '<UNDEFINED>';
spmjobs.spatial.coreg.estwrite.source = '<UNDEFINED>';
spmjobs.spatial.coreg.estwrite.other = {''};
spmjobs.spatial.coreg.estwrite.eoptions.cost_fun = defaults.coreg.estimate.cost_fun;
spmjobs.spatial.coreg.estwrite.eoptions.sep = defaults.coreg.estimate.sep;
spmjobs.spatial.coreg.estwrite.eoptions.tol = defaults.coreg.estimate.tol;
spmjobs.spatial.coreg.estwrite.eoptions.fwhm = defaults.coreg.estimate.fwhm;
spmjobs.spatial.coreg.estwrite.roptions.interp = defaults.coreg.write.interp;
spmjobs.spatial.coreg.estwrite.roptions.wrap = defaults.coreg.write.wrap;
spmjobs.spatial.coreg.estwrite.roptions.mask = defaults.coreg.write.mask;
spmjobs.spatial.coreg.estwrite.roptions.prefix = 'r';
spmjobs.spatial.preproc.data = '<UNDEFINED>';
spmjobs.spatial.preproc.output.GM = double([0 0 1]);
spmjobs.spatial.preproc.output.WM = double([0 0 1]);
spmjobs.spatial.preproc.output.CSF = double([0 0 0]);
spmjobs.spatial.preproc.output.biascor = double(1);
spmjobs.spatial.preproc.output.cleanup = double(0);
spmjobs.spatial.preproc.opts.tpm = cellstr(defaults.preproc.tpm);
spmjobs.spatial.preproc.opts.ngaus = defaults.preproc.ngaus;
spmjobs.spatial.preproc.opts.regtype = defaults.preproc.regtype;
spmjobs.spatial.preproc.opts.warpreg = defaults.preproc.warpreg;
spmjobs.spatial.preproc.opts.warpco = defaults.preproc.warpco;
spmjobs.spatial.preproc.opts.biasreg = defaults.preproc.biasreg;
spmjobs.spatial.preproc.opts.biasfwhm = defaults.preproc.biasfwhm;
spmjobs.spatial.preproc.opts.samp = defaults.preproc.samp;
spmjobs.spatial.preproc.opts.msk = {''};
spmjobs.spatial.normalise.est.subj.source = '<UNDEFINED>';
spmjobs.spatial.normalise.est.subj.wtsrc = {};
spmjobs.spatial.normalise.est.eoptions.template = '<UNDEFINED>';
spmjobs.spatial.normalise.est.eoptions.weight = {};
spmjobs.spatial.normalise.est.eoptions.smosrc = defaults.normalise.estimate.smosrc;
spmjobs.spatial.normalise.est.eoptions.smoref = defaults.normalise.estimate.smoref;
spmjobs.spatial.normalise.est.eoptions.regtype = defaults.normalise.estimate.regtype;
spmjobs.spatial.normalise.est.eoptions.cutoff = defaults.normalise.estimate.cutoff;
spmjobs.spatial.normalise.est.eoptions.nits = defaults.normalise.estimate.nits;
spmjobs.spatial.normalise.est.eoptions.reg = defaults.normalise.estimate.reg;
spmjobs.spatial.normalise.write.subj.matname = '<UNDEFINED>';
spmjobs.spatial.normalise.write.subj.resample = '<UNDEFINED>';
spmjobs.spatial.normalise.write.roptions.preserve = defaults.normalise.write.preserve;
spmjobs.spatial.normalise.write.roptions.bb = defaults.normalise.write.bb;
spmjobs.spatial.normalise.write.roptions.vox = defaults.normalise.write.vox;
spmjobs.spatial.normalise.write.roptions.interp = defaults.normalise.write.interp;
spmjobs.spatial.normalise.write.roptions.wrap = defaults.normalise.write.wrap;
spmjobs.spatial.normalise.write.roptions.prefix = 'w';
spmjobs.spatial.normalise.estwrite.subj.source = '<UNDEFINED>';
spmjobs.spatial.normalise.estwrite.subj.wtsrc = {};
spmjobs.spatial.normalise.estwrite.subj.resample = '<UNDEFINED>';
spmjobs.spatial.normalise.estwrite.eoptions.template = '<UNDEFINED>';
spmjobs.spatial.normalise.estwrite.eoptions.weight = {};
spmjobs.spatial.normalise.estwrite.eoptions.smosrc = defaults.normalise.estimate.smosrc;
spmjobs.spatial.normalise.estwrite.eoptions.smoref = defaults.normalise.estimate.smoref;
spmjobs.spatial.normalise.estwrite.eoptions.regtype = defaults.normalise.estimate.regtype;
spmjobs.spatial.normalise.estwrite.eoptions.cutoff = defaults.normalise.estimate.cutoff;
spmjobs.spatial.normalise.estwrite.eoptions.nits = defaults.normalise.estimate.nits;
spmjobs.spatial.normalise.estwrite.eoptions.reg = defaults.normalise.estimate.reg;
spmjobs.spatial.normalise.estwrite.roptions.preserve = defaults.normalise.write.preserve;
spmjobs.spatial.normalise.estwrite.roptions.bb = defaults.normalise.write.bb;
spmjobs.spatial.normalise.estwrite.roptions.vox = defaults.normalise.write.vox;
spmjobs.spatial.normalise.estwrite.roptions.interp = defaults.normalise.write.interp;
spmjobs.spatial.normalise.estwrite.roptions.wrap = defaults.normalise.write.wrap;
spmjobs.spatial.normalise.estwrite.roptions.prefix = 'w';
spmjobs.spatial.smooth.data = '<UNDEFINED>';
spmjobs.spatial.smooth.fwhm = double([8 8 8]);
spmjobs.spatial.smooth.dtype = double(0);
spmjobs.spatial.smooth.prefix = 's';
spmjobs.stats.fmri_spec.dir = '<UNDEFINED>';
spmjobs.stats.fmri_spec.timing.units = '<UNDEFINED>';
spmjobs.stats.fmri_spec.timing.RT = '<UNDEFINED>';
spmjobs.stats.fmri_spec.timing.fmri_t = double(16);
spmjobs.stats.fmri_spec.timing.fmri_t0 = double(1);
spmjobs.stats.fmri_spec.sess.scans = '<UNDEFINED>';
spmjobs.stats.fmri_spec.sess.cond.name = 'Trial';
spmjobs.stats.fmri_spec.sess.cond.onset = '<UNDEFINED>';
spmjobs.stats.fmri_spec.sess.cond.duration = '<UNDEFINED>';
spmjobs.stats.fmri_spec.sess.cond.tmod = double(0);
spmjobs.stats.fmri_spec.sess.cond.pmod.name = 'Param';
spmjobs.stats.fmri_spec.sess.cond.pmod.param = '<UNDEFINED>';
spmjobs.stats.fmri_spec.sess.cond.pmod.poly = double(1);
spmjobs.stats.fmri_spec.sess.multi = {''};
spmjobs.stats.fmri_spec.sess.regress.name = 'Regressor';
spmjobs.stats.fmri_spec.sess.regress.val = '<UNDEFINED>';
spmjobs.stats.fmri_spec.sess.multi_reg = {''};
spmjobs.stats.fmri_spec.sess.hpf = double(128);
spmjobs.stats.fmri_spec.fact.name = '<UNDEFINED>';
spmjobs.stats.fmri_spec.fact.levels = '<UNDEFINED>';
spmjobs.stats.fmri_spec.bases.hrf.derivs = double([0 0]);
spmjobs.stats.fmri_spec.bases.fourier.length = '<UNDEFINED>';
spmjobs.stats.fmri_spec.bases.fourier.order = '<UNDEFINED>';
spmjobs.stats.fmri_spec.bases.fourier_han.length = '<UNDEFINED>';
spmjobs.stats.fmri_spec.bases.fourier_han.order = '<UNDEFINED>';
spmjobs.stats.fmri_spec.bases.gamma.length = '<UNDEFINED>';
spmjobs.stats.fmri_spec.bases.gamma.order = '<UNDEFINED>';
spmjobs.stats.fmri_spec.bases.fir.length = '<UNDEFINED>';
spmjobs.stats.fmri_spec.bases.fir.order = '<UNDEFINED>';
spmjobs.stats.fmri_spec.volt = double(1);
spmjobs.stats.fmri_spec.global = 'None';
spmjobs.stats.fmri_spec.mask = {''};
spmjobs.stats.fmri_spec.cvi = 'AR(1)';
spmjobs.stats.fmri_design.dir = '<UNDEFINED>';
spmjobs.stats.fmri_design.timing.units = '<UNDEFINED>';
spmjobs.stats.fmri_design.timing.RT = '<UNDEFINED>';
spmjobs.stats.fmri_design.timing.fmri_t = double(16);
spmjobs.stats.fmri_design.timing.fmri_t0 = double(1);
spmjobs.stats.fmri_design.sess.nscan = '<UNDEFINED>';
spmjobs.stats.fmri_design.sess.cond.name = 'Trial';
spmjobs.stats.fmri_design.sess.cond.onset = '<UNDEFINED>';
spmjobs.stats.fmri_design.sess.cond.duration = '<UNDEFINED>';
spmjobs.stats.fmri_design.sess.cond.tmod = double(0);
spmjobs.stats.fmri_design.sess.cond.pmod.name = 'Param';
spmjobs.stats.fmri_design.sess.cond.pmod.param = '<UNDEFINED>';
spmjobs.stats.fmri_design.sess.cond.pmod.poly = double(1);
spmjobs.stats.fmri_design.sess.multi = {''};
spmjobs.stats.fmri_design.sess.regress.name = 'Regressor';
spmjobs.stats.fmri_design.sess.regress.val = '<UNDEFINED>';
spmjobs.stats.fmri_design.sess.multi_reg = {''};
spmjobs.stats.fmri_design.sess.hpf = double(128);
spmjobs.stats.fmri_design.fact.name = '<UNDEFINED>';
spmjobs.stats.fmri_design.fact.levels = '<UNDEFINED>';
spmjobs.stats.fmri_design.bases.hrf.derivs = double([0 0]);
spmjobs.stats.fmri_design.bases.fourier.length = '<UNDEFINED>';
spmjobs.stats.fmri_design.bases.fourier.order = '<UNDEFINED>';
spmjobs.stats.fmri_design.bases.fourier_han.length = '<UNDEFINED>';
spmjobs.stats.fmri_design.bases.fourier_han.order = '<UNDEFINED>';
spmjobs.stats.fmri_design.bases.gamma.length = '<UNDEFINED>';
spmjobs.stats.fmri_design.bases.gamma.order = '<UNDEFINED>';
spmjobs.stats.fmri_design.bases.fir.length = '<UNDEFINED>';
spmjobs.stats.fmri_design.bases.fir.order = '<UNDEFINED>';
spmjobs.stats.fmri_design.volt = double(1);
spmjobs.stats.fmri_design.global = 'None';
spmjobs.stats.fmri_design.cvi = 'AR(1)';
spmjobs.stats.fmri_data.scans = '<UNDEFINED>';
spmjobs.stats.fmri_data.spmmat = '<UNDEFINED>';
spmjobs.stats.fmri_data.mask = {''};
spmjobs.stats.factorial_design.dir = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.t1.scans = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.t2.scans1 = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.t2.scans2 = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.t2.dept = double(0);
spmjobs.stats.factorial_design.des.t2.variance = double(1);
spmjobs.stats.factorial_design.des.t2.gmsca = double(0);
spmjobs.stats.factorial_design.des.t2.ancova = double(0);
spmjobs.stats.factorial_design.des.pt.pair.scans = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.pt.dept = double(0);
spmjobs.stats.factorial_design.des.pt.variance = double(1);
spmjobs.stats.factorial_design.des.pt.gmsca = double(0);
spmjobs.stats.factorial_design.des.pt.ancova = double(0);
spmjobs.stats.factorial_design.des.mreg.scans = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.mreg.mcov.c = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.mreg.mcov.cname = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.mreg.mcov.iCC = double(1);
spmjobs.stats.factorial_design.des.fd.fact.name = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.fd.fact.levels = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.fd.fact.dept = double(0);
spmjobs.stats.factorial_design.des.fd.fact.variance = double(1);
spmjobs.stats.factorial_design.des.fd.fact.gmsca = double(0);
spmjobs.stats.factorial_design.des.fd.fact.ancova = double(0);
spmjobs.stats.factorial_design.des.fd.icell.levels = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.fd.icell.scans = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.fblock.fsubject.scans = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.fblock.fsubject.conds = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.fblock.fsuball.fsubject.scans = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.fblock.fsuball.fsubject.conds = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.fblock.fsuball.specall.scans = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.fblock.fsuball.specall.imatrix = double(0);
spmjobs.stats.factorial_design.des.fblock.maininters.fmain.fnum = '<UNDEFINED>';
spmjobs.stats.factorial_design.des.fblock.maininters.inter.fnums = '<UNDEFINED>';
spmjobs.stats.factorial_design.cov.c = '<UNDEFINED>';
spmjobs.stats.factorial_design.cov.cname = '<UNDEFINED>';
spmjobs.stats.factorial_design.cov.iCFI = double(1);
spmjobs.stats.factorial_design.cov.iCC = double(1);
spmjobs.stats.factorial_design.masking.tm.tm_none = double([]);
spmjobs.stats.factorial_design.masking.tm.tma.athresh = double(100);
spmjobs.stats.factorial_design.masking.tm.tmr.rthresh = double(0.800000000000000044);
spmjobs.stats.factorial_design.masking.im = double(1);
spmjobs.stats.factorial_design.masking.em = {''};
spmjobs.stats.factorial_design.globalc.g_omit = double([]);
spmjobs.stats.factorial_design.globalc.g_user.global_uval = double(0);
spmjobs.stats.factorial_design.globalc.g_mean = double([]);
spmjobs.stats.factorial_design.globalm.gmsca.gmsca_no = double([]);
spmjobs.stats.factorial_design.globalm.gmsca.gmsca_yes.gmscv = double(50);
spmjobs.stats.factorial_design.globalm.glonorm = double(1);
spmjobs.stats.fmri_est.spmmat = '<UNDEFINED>';
spmjobs.stats.fmri_est.method.Classical = double(1);
spmjobs.stats.fmri_est.method.Bayesian.space.Volume = double(1);
spmjobs.stats.fmri_est.method.Bayesian.space.Slices = '<UNDEFINED>';
spmjobs.stats.fmri_est.method.Bayesian.signal = 'GMRF';
spmjobs.stats.fmri_est.method.Bayesian.ARP = double(3);
spmjobs.stats.fmri_est.method.Bayesian.noise.GMRF = double(1);
spmjobs.stats.fmri_est.method.Bayesian.noise.LORETA = double(1);
spmjobs.stats.fmri_est.method.Bayesian.noise.tissue_type = '<UNDEFINED>';
spmjobs.stats.fmri_est.method.Bayesian.noise.Robust = double(1);
spmjobs.stats.fmri_est.method.Bayesian.anova.first = 'No';
spmjobs.stats.fmri_est.method.Bayesian.anova.second = 'Yes';
spmjobs.stats.fmri_est.method.Bayesian.gcon.name = '<UNDEFINED>';
spmjobs.stats.fmri_est.method.Bayesian.gcon.convec = '<UNDEFINED>';
spmjobs.stats.fmri_est.method.Bayesian2 = double(1);
spmjobs.stats.con.spmmat = '<UNDEFINED>';
spmjobs.stats.con.consess.tcon.name = '<UNDEFINED>';
spmjobs.stats.con.consess.tcon.convec = '<UNDEFINED>';
spmjobs.stats.con.consess.tcon.sessrep = 'none';
spmjobs.stats.con.consess.fcon.name = '<UNDEFINED>';
spmjobs.stats.con.consess.fcon.convec = {'<UNDEFINED>'};
spmjobs.stats.con.consess.fcon.sessrep = 'none';
spmjobs.stats.con.consess.tconsess.name = '<UNDEFINED>';
spmjobs.stats.con.consess.tconsess.coltype.colconds.conweight = '<UNDEFINED>';
spmjobs.stats.con.consess.tconsess.coltype.colconds.colcond = '<UNDEFINED>';
spmjobs.stats.con.consess.tconsess.coltype.colconds.colbf = '<UNDEFINED>';
spmjobs.stats.con.consess.tconsess.coltype.colconds.colmod = '<UNDEFINED>';
spmjobs.stats.con.consess.tconsess.coltype.colconds.colmodord = '<UNDEFINED>';
spmjobs.stats.con.consess.tconsess.coltype.colreg = '<UNDEFINED>';
spmjobs.stats.con.consess.tconsess.sessions = '<UNDEFINED>';
spmjobs.stats.con.delete = double(0);
spmjobs.stats.results.spmmat = '<UNDEFINED>';
spmjobs.stats.results.conspec.titlestr = '';
spmjobs.stats.results.conspec.contrasts = '<UNDEFINED>';
spmjobs.stats.results.conspec.threshdesc = '<UNDEFINED>';
spmjobs.stats.results.conspec.thresh = double(0.0500000000000000028);
spmjobs.stats.results.conspec.extent = double(0);
spmjobs.stats.results.conspec.mask.contrasts = '<UNDEFINED>';
spmjobs.stats.results.conspec.mask.thresh = double(0.0500000000000000028);
spmjobs.stats.results.conspec.mask.mtype = '<UNDEFINED>';
spmjobs.stats.results.print = double(1);
spmjobs.util.disp.data = '<UNDEFINED>';
spmjobs.util.checkreg.data = '<UNDEFINED>';
spmjobs.util.imcalc.input = '<UNDEFINED>';
spmjobs.util.imcalc.output = 'output.img';
spmjobs.util.imcalc.outdir = {''};
spmjobs.util.imcalc.expression = 'i1';
spmjobs.util.imcalc.options.dmtx = defaults.imcalc.dmtx;
spmjobs.util.imcalc.options.mask = defaults.imcalc.mask;
spmjobs.util.imcalc.options.interp = defaults.imcalc.interp;
spmjobs.util.imcalc.options.dtype = defaults.imcalc.dtype;
spmjobs.util.reorient.srcfiles = '<UNDEFINED>';
spmjobs.util.reorient.transform.transM = '<UNDEFINED>';
spmjobs.util.reorient.transform.transprm = '<UNDEFINED>';
spmjobs.util.dicom.data = '<UNDEFINED>';
spmjobs.util.dicom.root = 'flat';
spmjobs.util.dicom.outdir = {''};
spmjobs.util.dicom.convopts.format = 'nii';
spmjobs.util.dicom.convopts.icedims = double(0);
spmjobs.util.minc.data = '<UNDEFINED>';
spmjobs.util.minc.opts.dtype = double(4);
spmjobs.util.minc.opts.ext = '.img';
spmjobs.util.ecat.data = '<UNDEFINED>';
spmjobs.util.ecat.opts.ext = '.img';
spmjobs.util.spm_surf.data = '<UNDEFINED>';
spmjobs.util.spm_surf.mode = double(3);
spmjobs.util.spm_surf.thresh = double(0.5);
spmjobs.util.runbatch.jobs = '<UNDEFINED>';
spmjobs.util.cdir.directory = '<UNDEFINED>';
spmjobs.util.md.basedir = '<UNDEFINED>';
spmjobs.util.md.name = '<UNDEFINED>';
spmjobs.util.movefile.srcfiles = '<UNDEFINED>';
spmjobs.util.movefile.targetdir = '<UNDEFINED>';
spmjobs.util.deletefiles.deletefiles = '<UNDEFINED>';
spmjobs.util.defs.comp.sn2def.matname = '<UNDEFINED>';
spmjobs.util.defs.comp.sn2def.vox = double([NaN NaN NaN]);
spmjobs.util.defs.comp.sn2def.bb = double([NaN NaN NaN
                                       NaN NaN NaN]);
spmjobs.util.defs.comp.dartel.flowfield = '<UNDEFINED>';
spmjobs.util.defs.comp.dartel.times = double([1 0]);
spmjobs.util.defs.comp.dartel.K = double(6);
spmjobs.util.defs.comp.def = '<UNDEFINED>';
spmjobs.util.defs.comp.id.space = '<UNDEFINED>';
spmjobs.util.defs.comp.inv.comp.sn2def.matname = '<UNDEFINED>';
spmjobs.util.defs.comp.inv.comp.sn2def.vox = double([NaN NaN NaN]);
spmjobs.util.defs.comp.inv.comp.sn2def.bb = double([NaN NaN NaN
                                                NaN NaN NaN]);
spmjobs.util.defs.comp.inv.comp.dartel.flowfield = '<UNDEFINED>';
spmjobs.util.defs.comp.inv.comp.dartel.times = double([1 0]);
spmjobs.util.defs.comp.inv.comp.dartel.K = double(6);
spmjobs.util.defs.comp.inv.comp.def = '<UNDEFINED>';
spmjobs.util.defs.comp.inv.comp.id.space = '<UNDEFINED>';
spmjobs.util.defs.comp.inv.space = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.sn2def.matname = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.sn2def.vox = double([NaN NaN NaN]);
spmjobs.util.defs.comp.comp.sn2def.bb = double([NaN NaN NaN
                                            NaN NaN NaN]);
spmjobs.util.defs.comp.comp.dartel.flowfield = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.dartel.times = double([1 0]);
spmjobs.util.defs.comp.comp.dartel.K = double(6);
spmjobs.util.defs.comp.comp.def = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.id.space = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.inv.comp.sn2def.matname = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.inv.comp.sn2def.vox = double([NaN NaN NaN]);
spmjobs.util.defs.comp.comp.inv.comp.sn2def.bb = double([NaN NaN NaN
                                                     NaN NaN NaN]);
spmjobs.util.defs.comp.comp.inv.comp.dartel.flowfield = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.inv.comp.dartel.times = double([1 0]);
spmjobs.util.defs.comp.comp.inv.comp.dartel.K = double(6);
spmjobs.util.defs.comp.comp.inv.comp.def = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.inv.comp.id.space = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.inv.space = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.comp.sn2def.matname = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.comp.sn2def.vox = double([NaN NaN NaN]);
spmjobs.util.defs.comp.comp.comp.sn2def.bb = double([NaN NaN NaN
                                                 NaN NaN NaN]);
spmjobs.util.defs.comp.comp.comp.dartel.flowfield = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.comp.dartel.times = double([1 0]);
spmjobs.util.defs.comp.comp.comp.dartel.K = double(6);
spmjobs.util.defs.comp.comp.comp.def = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.comp.id.space = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.comp.inv.comp.sn2def.matname = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.comp.inv.comp.sn2def.vox = double([NaN NaN NaN]);
spmjobs.util.defs.comp.comp.comp.inv.comp.sn2def.bb = double([NaN NaN NaN
                                                          NaN NaN NaN]);
spmjobs.util.defs.comp.comp.comp.inv.comp.dartel.flowfield = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.comp.inv.comp.dartel.times = double([1 0]);
spmjobs.util.defs.comp.comp.comp.inv.comp.dartel.K = double(6);
spmjobs.util.defs.comp.comp.comp.inv.comp.def = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.comp.inv.comp.id.space = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.comp.inv.space = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.comp.comp.sn2def.matname = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.comp.comp.sn2def.vox = double([NaN NaN NaN]);
spmjobs.util.defs.comp.comp.comp.comp.sn2def.bb = double([NaN NaN NaN
                                                      NaN NaN NaN]);
spmjobs.util.defs.comp.comp.comp.comp.dartel.flowfield = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.comp.comp.dartel.times = double([1 0]);
spmjobs.util.defs.comp.comp.comp.comp.dartel.K = double(6);
spmjobs.util.defs.comp.comp.comp.comp.def = '<UNDEFINED>';
spmjobs.util.defs.comp.comp.comp.comp.id.space = '<UNDEFINED>';
spmjobs.util.defs.ofname = '<UNDEFINED>';
spmjobs.util.defs.fnames = {''};
spmjobs.util.defs.interp = double(1);
spmjobs.util.ui.appearance.colour1 = double([0.800000000000000044 0.800000000000000044 1]);
spmjobs.util.ui.appearance.colour2 = double([1 1 0.800000000000000044]);
spmjobs.util.ui.appearance.colour3 = double([0 0 0]);
spmjobs.util.ui.appearance.fs = double(14);
spmjobs.util.ui.print.opt = {
                         '-dpsc2'
                         '-append'
}';
spmjobs.util.ui.print.append = logical(true);
spmjobs.util.ui.print.ext = '.ps';
spmjobs.util.meeg.dataset = '<UNDEFINED>';
spmjobs.util.meeg.trials.sub_trialdef.eventtype = 'gui';
spmjobs.util.meeg.trials.sub_trialdef.eventvalue = 'gui';
spmjobs.util.meeg.trials.sub_trialdef.prestim = '<UNDEFINED>';
spmjobs.util.meeg.trials.sub_trialdef.poststim = '<UNDEFINED>';
spmjobs.util.meeg.trials.sub_trialdef.ignorelim = 'no';
spmjobs.util.meeg.trials.sub_trialdef.savetrl = 'no';
spmjobs.util.meeg.trials.trlfile = '<UNDEFINED>';
spmjobs.util.meeg.trials.loadcont = ' ';
spmjobs.util.meeg.padding = double(0);
spmjobs.util.meeg.timeshift = double(0);
spmjobs.util.meeg.forcecont = 'no';
spmjobs.util.meeg.chansubset.channel = 'all';
spmjobs.util.meeg.chansubset.filters.lpfilter.lpfreq = '<UNDEFINED>';
spmjobs.util.meeg.chansubset.filters.lpfilter.lpfiltord = double(6);
spmjobs.util.meeg.chansubset.filters.lpfilter.lpfilttype = 'but';
spmjobs.util.meeg.chansubset.filters.lpfilter.lpfiltdir = 'twopass';
spmjobs.util.meeg.chansubset.filters.hpfilter.hpfreq = '<UNDEFINED>';
spmjobs.util.meeg.chansubset.filters.hpfilter.hpfiltord = double(6);
spmjobs.util.meeg.chansubset.filters.hpfilter.hpfilttype = 'but';
spmjobs.util.meeg.chansubset.filters.hpfilter.hpfiltdir = 'twopass';
spmjobs.util.meeg.chansubset.filters.bpfilter.bpfreq = '<UNDEFINED>';
spmjobs.util.meeg.chansubset.filters.bpfilter.bpfiltord = double(4);
spmjobs.util.meeg.chansubset.filters.bpfilter.bpfilttype = 'but';
spmjobs.util.meeg.chansubset.filters.bpfilter.bpfiltdir = 'twopass';
spmjobs.util.meeg.chansubset.filters.lnfilter.lnfreq = double(50);
spmjobs.util.meeg.chansubset.filters.lnfilter.lnfiltord = double(4);
spmjobs.util.meeg.chansubset.filters.dftfilter.dftfreq = double([50 100 150]);
spmjobs.util.meeg.chansubset.filters.medianfilter.medianfiltord = double(9);
spmjobs.util.meeg.chansubset.filters.detrend = 'yes';
spmjobs.util.meeg.chansubset.filters.blc.blcwindow = '<UNDEFINED>';
spmjobs.util.meeg.chansubset.filters.hilbert = 'yes';
spmjobs.util.meeg.chansubset.filters.rectify = 'yes';
spmjobs.util.meeg.precision = 'double';
spmjobs.util.meeg.sub_savesettings.savename = '<UNDEFINED>';
spmjobs.util.meeg.sub_savesettings.ctf = {'empty.mat'};
spmjobs.util.cat.vols = '<UNDEFINED>';
%-Toolbox autodetection
%-Get the list of toolbox directories
tbxdir = fullfile(spm('Dir'),'toolbox');
d  = dir(tbxdir); d = {d([d.isdir]).name};
dd = regexp(d,'^\.');
%(Beware, regexp returns an array if input cell array is of dim 0 or 1)
if ~iscell(dd), dd = {dd}; end
d  = {'' d{cellfun('isempty',dd)}};
ft = {}; dt = {};
%-Look for '*_def_*.m'files in these directories
for i=1:length(d)
    d2 = fullfile(tbxdir,d{i});
    di = dir(d2); di = {di(~[di.isdir]).name};
    f2 = regexp(di,'.*_def_.*\.m$');
    if ~iscell(f2), f2 = {f2}; end
    fi = {di{~cellfun('isempty',f2)}};
    if ~isempty(fi)
        ft = {ft{:} fi{:}};
        dt(end+1:end+length(fi)) = deal({d2});
    end;        
end
if ~isempty(ft)
    % The toolbox developer MUST add path to his/her toolbox in his/her 'prog'
    % function, with a command line like:
    % >> addpath(fullfile(spm('Dir'),'toolbox','mytoolbox'),'-end');
    cwd = pwd;
    for i=1:length(ft)
        try
            cd(dt{i});
            [defs deftag] = feval(strtok(ft{i},'.'));
            spmjobs.tools.(deftag) = defs;
        catch
            disp(['Loading of toolbox defaults' fullfile(dt{i},ft{i}) ' failed.']);
        end
    end
    cd(cwd);
end
