function [Files, Sf, Err] = spm_fix_header(Action, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)
% spm_fix_header
% FORMAT [Files, Sf, Err] = spm_fix_header(Action, arg1, arg2,....)
%_______________________________________________________________________
%
% Modify a list of SPM/ANALYZE header files;
%
% In order to correct or create some header files, you will have to 
% proceed in 3 steps :
%
% 1- Selection of file names and scalefactors :
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%
%	- either using a scalefactors.dat or .mat file 
%	- or selecting the file names and 
%		either clicking on the scale factors button
%		or entering a matlab expression
%
%	NB1 : 	Old headers files are overwritten;
%
%	      	If you want to do a Backup of your old headers
%		press the BAK button after having selected your 
%		files. This button disappears after completion to
%		avoid redundant backups. It reappears whenever a new
%		set of files is selected.
%		
%	NB2 : 	Files will be created or modified in the directory where 
%	     	the "scalefactor(s)" file is located if the files are
%	     	selected this way.
%	
%	
%
% 2- Selection of the other parameters to be put in your new headers
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%	Other parameters are taken from the panel window and applied to the
%	list of filenames if the corresponding fix button is on. If the fix
%	button is off (not black), the program will try to open the filenames
%	and take the corresponding parameters from the previous header file. An
%	error occurs if one of the filenames can't be read.
%
%	To fill the usual parameters, enter the values directly or
%	choose in the "scanner" pull down menu for a template. 
%
%	Notice that in the "scanner" menu you also can choose  
%
% 3- Click on 'GO'
%~~~~~~~~~~~~~~~~~~~
%	Click on Show to check the different files and their corresponding 
%    	parameters in the matlab window.
%
%
%
% Examples : 
%~~~~~~~~~~~~~
%	1. A scalefactor .dat file for the 953b camera :
%	- select the scalefator file
%	- select 953b from the camera menu
%	- the different parametres will be displayed; 
%	  click on 'GO' to proceed.
%
%	2. The scalefactors values come from a scalefactor.mat file
%	   but the file names are different :
%	- select the scalefactor.mat file : this will fill the list of 
%	  filenames and the list of scalefactors.
%	- select filenames again to overwrite the list of filenames
%	- select the desired parameters, check (using show) and proceed.
%
%	3. To create new headers : select the .img files; provide scale factors
%	   and other parameters; press GO. 
%
% Limitations : 
%
%	- The BAK button takes the list of Filenames and creates a header.BAK
%	  but does not check if there is enough space on the disk.	
%	  
%__________________________________________________________________________
% %W% Jean-Baptist Poline %E%

%	
%
%  calls spm_hread, spm_hwrite.

%-Version Control-%
% V1 - 01/04/95 - Jean Baptiste Poline


% No arguments means: First call out of spm
if nargin == 0
%--------------------------------------------------------------------------
%----------------------- construct the window 

S = get(0,'ScreenSize');
A = [S(3)/1152 S(4)/900 S(3)/1152 S(4)/900];
F = figure('Name','',...
	'Tag','FixHeadWin',...
	'NumberTitle','off',...
	'Color',rand(1,3),...
	'Resize','off',...
	'Visible','off',...
	'Units','Pixels',...
	'Position',[108 008 400 395].*A);
set(F,'Visible','on');


%--------------------------------------------------------------------------
%----------------------- take the scalefactor filename


uicontrol(F,	'style','edit','Position',[9+120+2 350 170  020].*A,...
		'String','',...
		'BackgroundColor',[0.6 0.8 0.8],...
		'Horizontalalignment','right',...
		'Tag','scalefactor_file');

cb_ = [	'F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
		'h = findobj(F,''Tag'',''msg_text'');',...
		'set(h,''String'','''');',...
		'sf_name = spm_get(1,''at'',''scalefactor.{dat,mat}'');',...
		'h = findobj(F,''Tag'',''scalefactor_file'');',...
		'set(h,''String'',sf_name);',...
		'disp(sf_name);',...
		'[Files,Sf] = spm_fix_header(''read_sf'', sf_name);',...
		'set(findobj(F, ''Tag'', ''scalefactor_file''), ''UserData'', Files);',...
		'set(findobj(F, ''Tag'', ''Sf''), ''UserData'', Sf);',...
		'N = max(size(Sf));',...
		'h = findobj(F,''Tag'',''files_txt'');',...
		'set(h,''String'',sprintf('' %0.0f files selected '',N));',...
		'h = findobj(F,''Tag'',''scalefactors_txt'');',...
		'set(h,''String'',sprintf('' %0.0f factors selected '',N));',...
	 	'h = findobj(F,''Tag'',''h_BAK'');',...
	 	'set(h,''Visible'',''on'');',...
		'clear F sf_name Files Sf N h;'];


uicontrol(F,'Style','Pushbutton',...
	'tag', 'Sf',...
	'String','Scalefactor file :',...
	'ForegroundColor','k',...
	'Callback',cb_,...
	'Interruptible', 'yes',...
	'Position',[9 350 120 020].*A);



%--------------------------------------------------------------------------
%----------------------- BAK button


cb_ =	[ 'F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...	
		'Files = get(findobj(F, ''Tag'', ''scalefactor_file''), ''UserData'');',...
		'h = findobj(F,''Tag'',''msg_text'');',...
		'set(h,''String'','''');',...
		'for i=1:size(Files,1);',...
			'P = Files(i,:);',...
			'P = deblank(P);',...
			'if P(length(P)-3) ~= ''.'' ;',...
				'P = [P ''.hdr''];',...
				'disp(P);',...
			'end;',...
			'PP = P(max(1,length(P)-25):length(P));',...	
			'eval([''!cp '', P, '' '', P,''.BAK'']);',...
			'if exist([P,''.BAK'']);',...
				'disp([''written : ...'' PP ''.BAK'']);',...
			'else;',...
				'set(h, ''String'', [''Error : ...'' PP ''.BAK'' '' not created'']);',...
			'end;',...
		'end;',...
		'h = findobj(F,''Tag'',''h_BAK'');',...
		'set(h,''Visible'',''off'');',...
		'clear F i Files P PP h;'];


uicontrol(F,'Style','Pushbutton','String','BAK',...
	'ForegroundColor','k',...
        'Tag','h_BAK',...
	'Callback',cb_,...
	'Position',[345 320 40 020].*A);

%--------------------------------------------------------------------------
%----------------------- take other file names if no scalefactor file




cb_ =	['F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
	'h = findobj(F,''Tag'',''msg_text'');',...
	'set(h,''String'','''');',...
	'Files = spm_get(+Inf,''.hdr'');',...
	'set(findobj(F, ''Tag'', ''scalefactor_file''), ''UserData'', Files);',...
	'N = size(Files,1);',...
	'h = findobj(F,''Tag'',''files_txt'');',...
	'set(h,''String'',sprintf('' %0.0f files selected '',N));',...
	'disp(N);disp(Files);',...
	'h = findobj(F,''Tag'',''h_BAK'');',...
	'set(h,''Visible'',''on'');',...
	'clear h F Files N';];

uicontrol(F,'Style','Pushbutton','String',' Files :',...
	'ForegroundColor','k',...
	'Callback',cb_,...
	'Interruptible', 'yes',...
	'Position',[9+20 320 120 020].*A);



cb_ = 	['F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
	'h = findobj(F,''Tag'',''msg_text'');',...
	'set(h,''String'','''');',...
	'h = findobj(F,''Tag'',''files_txt'');',...
	'set(h,''String'','' select with Files '');',...
	'clear F h';];

uicontrol(F,'Style','Edit',...
            'String','',...
            'Tag','files_txt',...
            'UserData',[],...
            'Horizontalalignment','Left',...
            'BackgroundColor',[.6,.8,.8],...
	    'Callback',cb_,...
            'Position',[9+20+120+2 320 150 020].*A);
 


%--------------------------------------------------------------------------
%----------------------- take scalefactors        

cb_ =	['F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
	'h = findobj(F,''Tag'',''msg_text'');',...
	'set(h,''String'','''');',...
	'h = findobj(F,''Tag'',''scalefactors_txt'');',...
	'set(h,''String'','''');',...
	'Sf = get(findobj(F, ''Tag'', ''Sf''), ''UserData'');',...
	'Files = get(findobj(F, ''Tag'', ''scalefactor_file''), ''UserData'');',...
	'if ~isempty(Sf) set(h,''String'',sprintf('' %f '',Sf)); ',...
	'elseif ~isempty(Files);',...
		   'for i=1:size(Files,1);',... 
			'[dim vox SCALE type offset origin descrip] ',...
			' = spm_hread(Files(i,:)); ',...
			'if isempty(dim);',...
			  'h = findobj(F,''Tag'',''msg_text'');',...
			  'set(h,''String'',sprintf('' Can t read %s '',Files(1,:)));',...
			  'Sf = [];',...
			  'break;',...
		 	'else;',...
			  'Sf  = [Sf SCALE];',...
			'end;',...
			'h = findobj(F,''Tag'',''scalefactors_txt'');',...
		  	'set(h,''String'',sprintf('' %f '',Sf));',...
		  'end;',...
		'set(findobj(F, ''Tag'', ''Sf''), ''UserData'', Sf);',...
	'end;',...
	'clear F h Sf Files i dim vox SCALE type offset origin descrip;'];


uicontrol(F,'Style','Pushbutton',...
                'String',' ScaleFactors :',...
 		'ForegroundColor','k',...
                'Tag','scalefactors_bt',...
		'Interruptible', 'no',...
		'Callback',cb_,...
                'Position',[9+20 290 120 020].*A);
         
cb_ = 	['F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
	'h = findobj(F,''Tag'',''msg_text'');',...
	'set(h,''String'','''');',...
	'h = findobj(F,''Tag'',''scalefactors_txt'');',...
	 'tmp = get(h,''String'');',...
	 'Sf = eval([''['',tmp,'']''],''sprintf(''''<ERROR>'''')'');',...
	 'disp(Sf);',...
	'set(findobj(F, ''Tag'', ''Sf''), ''UserData'', Sf);',...
	'clear F h tmp Sf';];


h = uicontrol(F,'Style','Edit',...
                'String','',...
                'Tag','scalefactors_txt',...
                'UserData',[],...
                'Horizontalalignment','Left',...
                'BackgroundColor',[.6,.8,.8],...
		'Callback',cb_,...
                'Position',[9+20+120+2 290 150 020].*A);
 
  
%--------------------------------------------------------------------------
%-----------------------  Camera menu 
%-------------------------------------------------------------------------


H     =[0 0 0 0  	1.0 1.0 1.0	0 0 0;		% 'Scanner ? 
	128 128 31 1 	2.09 2.09 3.43	0 0 0;		% '953b 3d   '
	128 128 31 1	2.05 2.05 3.43	0 0 0;		% '953b 2d   '
	128 128 15 1	2.10 2.10 6.40	0 0 0;		% '931   '
	128 128 43 1 	2.09 2.09 2.45	0 0 0;		% '953b 3d   '
	65   87 26 1	2.00 2.00 4.00	33 53 8;	% 'spm_nor  '
	65   87 26 1	2.00 2.00 4.00	33 53 8;];	% 'add   '
	

Cameras = str2mat('Scanner ? ', '953b 3d   ','953b 2d   ',...
			 '931   ', '953-43 planes',...
			 'spm_normalized ', 'add.img', 'show hdr ?');
%-------------------------------------------------------------------------
%-----------------------  Camera call back 

cb_	= ['F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
		'h = findobj(F,''Tag'',''msg_text'');',...
		'set(h,''String'','''');',...
		'h = findobj(F, ''Tag'', ''cameras'');',...	
		'H = get(h, ''UserData'');',...
		'val = get(h,''Value'');',...
		'if val == (size(H,1) + 1);',...
		  'tmp_s = spm_get(+Inf,''.hdr'');',...
		  'if ~isempty(tmp_s);',...
		     '[DIM VOX tmp_f TYPE OFFSET ORIGIN DESCRIP] = spm_hread(tmp_s);',...
		     'if isempty(DIM); ',...
			'h = findobj(F,''Tag'',''msg_text'');',...
			'set(h,''String'',sprintf('' Can t read %s '',tmp_s));',...
		     'else;',...
			'h = findobj(F,''Tag'',''h_VOX'');',...
    			'set(h, ''UserData'', VOX);',...
		  	'set(h,''String'',sprintf(''[%4.3f %4.3f %4.3f]'',VOX) );',...
			'h = findobj(F,''Tag'',''h_DIM'');',...
			'set(h, ''UserData'', DIM);',...
		 	'set(h,''String'',sprintf(''[%0.0f %0.0f %0.0f]'',DIM) );',...
			'h = findobj(F,''Tag'',''h_ORIGIN'');',...
		        'set(h, ''Userdata'', ORIGIN);',...
		 	'set(h,''String'',sprintf(''[%0.0f %0.0f %0.0f]'',ORIGIN) );',...
			'h = findobj(F,''Tag'',''h_DESCRIP'');',...
			'set(h, ''UserData'', DESCRIP);',...
		 	'set(h,''String'',DESCRIP );',...
		  	'h = findobj(F,''Tag'',''types'');',...
			'Types_value = [2 4 8 16 64 0];',...
			'val = find(Types_value==TYPE);',...
			'set(h, ''UserData'', val);',...
		  	'set(h,''Value'',val);',...
		  	'h = findobj(F,''Tag'',''msg_text'');',...
			'set(h, ''UserData'', OFFSET);',...
			'tmp_s = tmp_s([max(find(tmp_s==''/''))+1:length(tmp_s)]);',...
			'set(h,''String'',sprintf('' param from %s '',tmp_s));',...
		     'end;',...
		   'clear DIM VOX tmp_f TYPE Types_value OFFSET ORIGIN DESCRIP;',...
		   'else;',...
		     'h = findobj(F,''Tag'',''msg_text'');',...
		     'set(h,''String'',''no file selected'');',...
		   'end;',...
		'clear tmp_s;',...
		'else;',...
 		   'DIM    = H(val,1:3);',...
		   'VOX    = H(val,5:7);',...
		   'ORIGIN = H(val,8:10);',...
		   'h = findobj(F,''Tag'',''h_VOX'');',...
		   'set(h,''String'',sprintf(''[%4.3f %4.3f %4.3f]'',VOX) );',...
		   'set(h, ''UserData'', VOX);',...
		   'h = findobj(F,''Tag'',''h_DIM'');',...
		   'set(h,''String'',sprintf(''[%0.0f %0.0f %0.0f]'',DIM) );',...
		   'set(h, ''UserData'', DIM);',...
		   'h = findobj(F,''Tag'',''h_ORIGIN'');',...
		   'set(h,''String'',sprintf(''[%0.0f %0.0f %0.0f]'',ORIGIN) );',...
		   'set(h, ''Userdata'', ORIGIN);',...
		   'clear DIM ORIGIN VOX;',...
		'end;',...
		'clear F h H val;'];

 		%'disp(VOX);disp(DIM);disp(ORIGIN);',...

uicontrol(F,'Style','PopUp','Tag','cameras',...
		'String',Cameras,...
		'UserData', H,...
		'HorizontalAlignment','Left',...
		'ForegroundColor','k',...
		'Interruptible', 'yes',...
		'Callback',cb_,...
		'Position',[9 240 120 020].*A);


% st_DIM     =  'volume dim. (in pixel) : ';
% st_VOX     =  'Pixel  dim. (in mm)    : ';
% st_ORIGIN  =  'Origin      (in pixel) : ';
% st_TYPE    =  'Type of the data       : ';
% st_DESCRIP =  'Description            : ';
% st_OFFSET  =  'Offset      (in pixel) : ';


DESCRIP = 'spm_fixed';
% This is just the default for the beginning.
% The vector of modified FIX-Values is stored within the first radiobutton
% called fix_dim
FIX = [1 1 1 1 1];

% create text and edit control objects for 
% vol_dim pix_dim origin and others
%--------------------------------------------

cb_ = 	['F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
		'h = findobj(F,''Tag'',''h_DIM'');',...
		'tmp = get(h,''String'');',...
		' DIM = eval([''['',tmp,'']''],''disp(tmp)'');',...
		' if ~isempty(DIM); DIM = DIM(1,:); end;',...
		' if isstr(DIM) | size(DIM,2) < 3 | size(DIM, 2) > 4 | isempty(DIM) | ~exist(''DIM'') ; ',...
		'   set(h,''String'',''Error : re-enter'');',...
		' else; disp(DIM); set(h, ''UserData'', DIM); end;',...
		'clear F h tmp DIM;'];

uicontrol(F,'style','text','Position',[9 210 170 20].*A,...
	'String','volume dim. (in pixel) : ',...
	'Horizontalalignment','left');

uicontrol(F,'style','edit',....
	'Position',[9+170+2 210 150  020].*A,...
        'Tag','h_DIM',...
	'UserData', [],...
	'String','',...
	'BackgroundColor',[0.6 0.8 0.8],...
	'Horizontalalignment','left',...
	'Callback',cb_);

cb_ = 	['F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
	'h = findobj(F,''Tag'',''fix_dim'');',...
	'FIX = get(h, ''UserData'');',...
	'FIX(1) = ~FIX(1);',...
	'set(h, ''UserData'', FIX);',...
	' if FIX(1) == 0; ',...
	'	h2 = findobj(F,''Tag'',''h_DIM'');',...
	'	set(h2, ''String'','''');',...
	' end;',...
	'clear F h h2 FIX;'];

uicontrol(F,'style','radiobutton',...
	'Tag','fix_dim',...
	'Value',FIX(1),...
	'UserData', [1 1 1 1 1],...
	'Position',[9+170+150+3 210 50  020].*A,...
	'String','Fix',...
	'Callback',cb_);


cb_ = 	['F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
		'h = findobj(F,''Tag'',''h_VOX'');',...
		'tmp = get(h,''String'');',...
		' VOX = eval([''['',tmp,'']''],''disp(tmp)'');',...
		' if ~isempty(VOX); VOX = VOX(1,:); end;',...
		' if isstr(VOX) | size(VOX,2) ~= 3 | isempty(VOX) | ~exist(''VOX'') ; ',...
		'set(h,''String'',''Error : re-enter'');',...
		' else; disp(VOX); set(h, ''UserData'', VOX); end;',...
		'clear F h tmp VOX;'];

uicontrol(F,'style','text',...
	'Position',[9 180 170 20].*A,...
	'String','Voxel  dim. (in mm)    : ',...
	'Horizontalalignment','left');
uicontrol(F,'style','edit',...
	'Position',[9+170+2 180 150  020].*A,...
        'Tag','h_VOX',...
	'UserData', [],...
	'String','',...
	'BackgroundColor',[0.6 0.8 0.8],...
	'Horizontalalignment','left',...
	'Callback',cb_);
cb_ = 	['F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
	'h = findobj(F,''Tag'',''fix_dim'');',...
	'FIX = get(h, ''UserData'');',...
	'FIX(2) = ~FIX(2);',...
	'set(h, ''UserData'', FIX);',...
	' if FIX(2) == 0; ',...
	'	h2 = findobj(F,''Tag'',''h_VOX'');',...
	'	set(h2, ''String'','''');',...
	' end;',...
	'clear F h h2 FIX;'];

uicontrol(F,'style','radiobutton',...
	'Value',FIX(2),...
	'Position',[9+170+150+3 180 50  020].*A,...
	'String','Fix',...
	'Callback',cb_);



cb_ = 	['F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
		'h = findobj(F,''Tag'',''h_ORIGIN'');',...
		'tmp = get(h,''String'');',...
		' ORIGIN = eval([''['',tmp,'']''],''disp(tmp)'');',...
		' if ~isempty(ORIGIN); ORIGIN = ORIGIN(1,:); end;',...
		' if isstr(ORIGIN) | size(ORIGIN,2) ~= 3 ' ,...
			' | isempty(ORIGIN) | ~exist(''ORIGIN'') ; ',...
		'   set(h,''String'',''Error : re-enter'');',...
		' else; disp(ORIGIN); set(h, ''UserData'', ORIGIN); end;',...
		'clear F h tmp ORIGIN;'];

uicontrol(F,'style','text','Position',[9 150 170 20].*A,...
	'String','Origin      (in pixel) : ' ,...
	'Horizontalalignment','left');

uicontrol(F,'style','edit',...
	'Position',[9+170+2 150 150  020].*A,...
        'Tag','h_ORIGIN',...
	'UserData', [],...
	'String','',...
	'BackgroundColor',[0.6 0.8 0.8],...
	'Horizontalalignment','left',...
	'Callback',cb_);

cb_ = 	['F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
	'h = findobj(F,''Tag'',''fix_dim'');',...
	'FIX = get(h, ''UserData'');',...
	'FIX(3) = ~FIX(3);',...
	'set(h, ''UserData'', FIX);',...
	' if FIX(3) == 0; ',...
	'	h2 = findobj(F,''Tag'',''h_ORIGIN'');',...
	'	set(h2, ''String'','''');',...
	' end;',...
	'clear F h h2 FIX;'];

uicontrol(F,'style','radiobutton',...
	'Value',FIX(3),...
	'Position',[9+170+150+3 150 50  020].*A,...
	'String','Fix',...
	'Callback',cb_);



Types = str2mat(spm_type(2), spm_type(4), spm_type(8), spm_type(16), spm_type(64), 'unknown');


cb_	= 	['F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
		 'h = findobj(F, ''Tag'', ''types'');',...
		'val = get(h,''Value'');',...
		'Types = get(h, ''String'');',...
		'TYPE = spm_type(Types(val,:));',...
		'disp(TYPE);',...
		'clear F h val Types TYPE;'];

uicontrol(F,'Style','PopUp','Tag','types',...
		'UserData', [2],...
		'String',Types,...
		'HorizontalAlignment','Left',...
		'ForegroundColor','k',...
		'BackgroundColor',[0.6 0.8 0.8],...
		'Callback',cb_,...
		'Position',[9+170+2 120 150  020].*A);

uicontrol(F,'style','text',...
	'Position',[9 120 170 20].*A,...
	'String','Type of the data       : ' ,...
	'Horizontalalignment','left');

cb_ = 	['F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
	'h = findobj(F,''Tag'',''fix_dim'');',...
	'FIX = get(h, ''UserData'');',...
	'FIX(4) = ~FIX(4);',...
	'set(h, ''UserData'', FIX);',...
	' if FIX(4) == 0; ',...
	'	h2 = findobj(F,''Tag'',''types'');',...
	'	Types_value = [2 4 8 16 64 0];',...
	'	set(h2,''Value'',find(Types_value==0));',...
	' end;',...
	'clear F h h2 Types_value FIX;'];

uicontrol(F,'style','radiobutton',...
	'Value',FIX(4),...
	'Position',[9+170+150+3 120 50  020].*A,...
	'String','Fix',...
	'Callback',cb_);



cb_ = 	[	'F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
		'h = findobj(F,''Tag'',''h_DESCRIP'');',...
		'DESCRIP = get(h,''String'');',...
		'disp(DESCRIP);'];

uicontrol(F,'style','text',...
	'Position',[9 90 170 20].*A,...
	'String', 'Description            : ' ,...
	'Horizontalalignment','left');

uicontrol(F,'style','edit',...
	'Position',[9+170+2 90 150  020].*A,...
        'Tag','h_DESCRIP',...
	'UserData', '[spm_fixed]',...
	'String',DESCRIP,...
	'BackgroundColor',[0.6 0.8 0.8],...
	'Horizontalalignment','left',...
	'Callback',cb_);

cb_ = 	['F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
	'h = findobj(F,''Tag'',''fix_dim'');',...
	'FIX = get(h, ''UserData'');',...
	'FIX(5) = ~FIX(5);',...
	'set(h, ''UserData'', FIX);',...
	' if FIX(5) == 0; ',...
	'	h2 = findobj(F,''Tag'',''h_DESCRIP'');',...
	'	set(h2, ''String'','''');',...
	' end;',...
	'clear F h h2 FIX;'];

uicontrol(F,'style','radiobutton',...
	'Value',FIX(5),...
	'Position',[9+170+150+3 90 50  020].*A,...
	'String','Fix',...
	'Callback',cb_);



%--------------------------------------------------------------------------
%----------------------- OK button : check and do it         
%-------------------------------------------------------------------------


cb_ = ['F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
	'h = findobj(F,''Tag'',''msg_text'');',...
	'set(h,''String'','''');',...
	'Files = get(findobj(F, ''Tag'', ''scalefactor_file''), 	''UserData'');',...
	'Sf = get(findobj(F, ''Tag'', ''Sf''), ''UserData'');',...
	'DIM = get(findobj(F, ''Tag'', ''h_DIM''), ''UserData'');',...
	'VOX = get(findobj(F, ''Tag'', ''h_VOX''), ''UserData'');',...
	'h = findobj(F,''Tag'',''types'');',...
	'val = get(h,''Value'');',...
	'Types = get(h, ''String'');',...
	'TYPE = spm_type(Types(val,:));',...
	'OFFSET = get(findobj(F, ''Tag'', ''msg_text''), ''UserData'');',...
	'ORIGIN = get(findobj(F, ''Tag'', ''h_ORIGIN''), ''UserData'');',...
	'DESCRIP = get(findobj(F, ''Tag'', ''h_DESCRIP''), ''String'');',...
	'FIX = get(findobj(F, ''Tag'', ''fix_dim''), ''UserData'');',...
	'Files, Sf, DIM, VOX, TYPE, OFFSET, ORIGIN, DESCRIP, FIX, FIX;',...
	'clear F h val Types Types_value Files Sf DIM VOX TYPE OFFSET ORIGIN DESCRIP;'];

 		
uicontrol(F,'Style','Pushbutton','String','Show',...
	'ForegroundColor','k',...
	'Callback',cb_,...
	'Interruptible', 'yes',...
	'Position',[30 30 40 020].*A);


% OFFSET is packed into this one:
uicontrol(F,'Style','Text','String','',...
	'Tag','msg_text',...
	'UserData', [0],...
	'Visible','on',...
	'ForegroundColor','w',...
	'BackgroundColor','k',...
	'Callback','',...
	'Interruptible', 'no',...
	'Position',[30 5 355 020].*A);

% We have to unpack all those values given to go :(

cb_ =	['F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
	'h = findobj(F,''Tag'',''msg_text'');',...						 	'set(h,''String'','''');',...
	'Files = get(findobj(F, ''Tag'', ''scalefactor_file''), 	''UserData'');',...
	'Sf = get(findobj(F, ''Tag'', ''Sf''), ''UserData'');',...
	'DIM = get(findobj(F, ''Tag'', ''h_DIM''), ''UserData'');',...
	'VOX = get(findobj(F, ''Tag'', ''h_VOX''), ''UserData'');',...
	'h = findobj(F,''Tag'',''types'');',...
	'val = get(h,''Value'');',...
	'Types = get(h, ''String'');',...
	'TYPE = spm_type(Types(val,:));',...
	'OFFSET = get(findobj(F, ''Tag'', ''msg_text''), ''UserData'');',...
	'ORIGIN = get(findobj(F, ''Tag'', ''h_ORIGIN''), ''UserData'');',...
	'DESCRIP = get(findobj(F, ''Tag'', ''h_DESCRIP''), ''String'');',...
	'FIX = get(findobj(F, ''Tag'', ''fix_dim''), ''UserData'');',...
	'[tmp1, tmp2, Err] = spm_fix_header(''go'',Files, Sf, DIM, VOX, TYPE, OFFSET, ORIGIN, DESCRIP, FIX);',...
	'h = findobj(F,''Tag'',''msg_text'');',...
	'set(h,''String'', Err);',...
	'clear tmp1 tmp2 F h Err val Types Types_value Files Sf DIM VOX TYPE OFFSET ORIGIN DESCRIP FIX;'];
 		

uicontrol(F,'Style','Pushbutton','String','GO',...
	'ForegroundColor','k',...
	'Callback',cb_,...
	'Position',[300 30 40 020].*A);


cb_ =[	'F = findobj(get(0,''Children''),''Flat'', ''Tag'', ''FixHeadWin'');',...
		'delete(F);',...
		'clear F Files;'];
 		

uicontrol(F,'Style','Pushbutton','String','Quit',...
	'ForegroundColor','k',...
	'Callback',cb_,...
	'Position',[345 30 40 020].*A);


%**************************************************************************
%**************************************************************************
%**************************************************************************

elseif strcmp(Action, 'go')
% Here the real work is done after having specified the actual parameters
if nargin ~= 10
error('Wrong call to spm_fix_header - Aborting')
end

Files = arg1;
Sf = arg2;
DIM = arg3;
VOX = arg4;
TYPE = arg5;
OFFSET = arg6;
ORIGIN = arg7;
DESCRIP = arg8;
FIX = arg9;

%----------------------------------------------------------------------------
%--------------------------- check :
%--------------------------- # Files and Sf
Err	= '';
Sf 	= Sf(:);
if isempty(Files) | isempty(Sf) 
	Err = sprintf('Err : No file or no sf selected'); return; 
end;

if size(Files,1) ~= size(Sf,1)
	Err = sprintf('Err : # files : %d; # ScaleFactors %d ',...
		size(Files,1),size(Sf,1)); 
	return;
end





%--------------------------- Sf : numbers, >0; 
if any(isnan(Sf))	Err = sprintf('Err : Sf isnan'); return; end;
if any(Sf < 0 )		Err = sprintf('Err : Sf < 0  '); return; end;



%----------------------------------------------------------------------------
%--------------------------- # do it

  %------------------- check DIM VOX ORIGIN TYPE DESCRIP

  Good_Types_value = [2 4 8 16 64];
  if  size(Sf,1) == 0; Err = 'No file selected'; return; end; 

  if 	FIX(1) & (size(DIM,2) < 3 | size(DIM,2) > 4);
	Err = 'wrong size for volume DIM ';
	return;
  elseif FIX(2) & (size(VOX,2) < 3 | size(VOX,2) > 4);
	Err = 'wrong size for pixel VOX ';
	return;
  elseif FIX(3) & (size(ORIGIN,2) < 3 | size(ORIGIN,2) > 4);
	Err = 'wrong size for pixel ORIGIN ';
	return;
  elseif FIX(4) & isempty(find(Good_Types_value == TYPE)) ;
	Err = 'wrong type : unknown ';
	return;
  elseif FIX(5) & (~isstr(DESCRIP));
	Err = 'DESCRIP not a string';
	return;
  end;


%----------------------------------------------------------------------------
%--------------------------- # loop over files


for i = 1:size(Sf,1);

	P = deblank(Files(i,:));

	if(~all(FIX))

	   eval('[dim vox tmp_f typ offset origin descrip] = spm_hread(P);',...
	    'Err = sprintf(''pb reading %s '',P(max(1,length(P)-25):length(P)));');
	   if Err ~= '' return; end;
	   if isempty(dim) 
	     	Err=sprintf('can t read : ...%s ',...
			P(max(1,length(P)-20):length(P)));
	     	return;
	   end;

	   if(FIX(1)); DIM = dim; end;
	   if(FIX(2)); VOX = vox; end;
	   if(FIX(3)); ORIGIN = origin; end;
	   if(FIX(4)); TYPE = typ; end;
	   if(FIX(5)); DESCRIP = descrip; end;

	end; %-----------------------------if(~all(FIX))

	q               = length(P);
	if P(q - 3) == '.'; P = P(1:(q - 4)); end
	P     		= [P '.hdr'];
	s = spm_hwrite(P,DIM,VOX,Sf(i),TYPE,OFFSET,ORIGIN,DESCRIP);

	if s ~= 348
	  disp('check_and_do : spm_hwrite hasn''t written 348 ');
	  Err = sprintf('pb spm_hwrite %s',...
			P(length(P)-min(length(P),40)+1 :length(P)));
	else
	  disp(['successfully written :',Files(i,:)]);
	end; %-----------------------------% s ~= 348

end; %-------------------------------- for i = 1:size(Sf,1);

     
if Err == '';
	if size(Sf, 1) == 1;
		Err = sprintf(' %0.0f file written ',size(Sf,1));
	else;
		Err = sprintf(' %0.0f files written ',size(Sf,1));

	end;
end;

%**************************************************************************
%**************************************************************************
%**************************************************************************

elseif strcmp(Action, 'read_sf')
	% read in the scalefactors
	if nargin ~= 2
	error('Wrong call to spm_fix_header - Aborting');
	end;

	sf_file = arg1

     Sf	= [];
     Files = [];
     err = '';
     sf_file	= deblank(sf_file);
     eval(['load ',sf_file],'err = sprintf(''error'');');
     
	
     if sf_file ~= '' & err == 'error'	% scalefactor.dat file 
	  
	fid   	= fopen(sf_file,'r');
	if fid <= 0;  disp(['can''t open ',sf_file]); return; end; 
	A     	= setstr(fread(fid,'char'))';
	dir 	= sf_file(1:max(find(sf_file == '/')));
	fclose(fid);

%------------------- remove blanks aso at tail
	A = fliplr(A);
	while abs(A(1)) == 10 | abs(A(1)) == 32 | abs(A(1)) == 0
		if (length(A) > 1) A = A(2:length(A)); else A = ''; end;
	end;
	A = fliplr(A);
	ind = 1;


	while ~strcmp(A,'')

 	%------------------- remove blanks and so on at head ;
	  while abs(A(1)) == 10 | abs(A(1)) == 32 | abs(A(1)) == 0
		if (length(A) > 1) A = A(2:length(A)); else A = ''; end;
	  end;

	  [file,c,err,ind] = sscanf(A(ind:length(A)),'%s',1);
	  if file(1) ~= '/'; file = [dir,file]; end;
	  A = A(ind:length(A));ind=1;

	%------------------- remove blanks and so on at head ;
	  while abs(A(1)) == 10 | abs(A(1)) == 32 | abs(A(1)) == 0
		if (length(A) > 1) A = A(2:length(A)); else A = ''; end;
	  end;

	  if ~strcmp(err,'');
		Files = []; Sf = 0; 
		return;
	  end;

	  if isempty(Files); Files = file; 
	  else; Files = str2mat(Files,file); end;

	  [scal,c,err,ind] = sscanf(A(ind:length(A)),'%f',1);
	  A = A(ind:length(A));ind=1;
	  A = fliplr(deblank(fliplr(A)));
	  Sf = [Sf; scal];

	end
     else

	dir 	= sf_file(1:max(find(sf_file == '/')));
	Files	= SFFN';
	Sf	= SFV';

%------------------- add the directory (from the scalefactor) to Files ;

	NFiles = zeros(size(Files,1),size(Files,2)+length(dir));

	for i=1:size(Files,1)
		if  Files(i,1) ~= '/'
			NFiles(i,:) = [dir,Files(i,:)];
		end;
	end;
	Files = NFiles;

     end;
end;
    	
    


